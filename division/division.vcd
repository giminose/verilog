$date
	Tue Mar 22 12:39:47 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_division $end
$var wire 8 ! Res [7:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$scope module uut $end
$var wire 8 $ A [7:0] $end
$var wire 8 % B [7:0] $end
$var reg 8 & Res [7:0] $end
$var reg 8 ' a1 [7:0] $end
$var reg 8 ( b1 [7:0] $end
$var reg 9 ) p1 [8:0] $end
$var integer 32 * i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 *
b0 )
b0 (
b11111111 '
b11111111 &
b0 %
b0 $
b0 #
b0 "
b11111111 !
$end
#100
b1010 !
b1010 &
b0 )
b1000 *
b1010 (
b1010 '
b1010 #
b1010 %
b1100100 "
b1100100 $
#200
b101 !
b101 &
b0 )
b1000 *
b101000 (
b101 '
b101000 #
b101000 %
b11001000 "
b11001000 $
#300
b1010 !
b1010 &
b0 )
b1000 *
b1001 (
b1010 '
b1001 #
b1001 %
b1011010 "
b1011010 $
#400
b111 !
b111 &
b0 )
b1000 *
b1010 (
b111 '
b1010 #
b1010 %
b1000110 "
b1000110 $
#500
b101 !
b101 &
b1 )
b1000 *
b11 (
b101 '
b11 #
b11 %
b10000 "
b10000 $
#600
b110011 !
b110011 &
b1000 *
b0 )
b101 (
b110011 '
b101 #
b101 %
b11111111 "
b11111111 $
#700
